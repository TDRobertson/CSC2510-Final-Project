---
    # Install Install Apache2, NodeJS, and Git on Web Servers and Hybrid Servers for Prod Environments
  - name: Install Packages for Prod Environment
    # host targets
    hosts: webserverstest hybridstest
    # tasks to run on the host targets to install Apache2 and NodeJS
    tasks: 
      # Install Apache2
      - name: Install Apache2
        apt:
          name: apache2
          # ensure that Apache2 is installed and the latest version
          state: latest
      # install NodeJS
      - name: Install NodeJS
        apt:
          name: nodejs
          # ensure that NodeJS is installed and the latest version
          state: latest
      # Install Git
      - name: Install Git
        apt:
          name: git
          # ensure that Git is installed and the latest version
          state: latest

    # Install MariaDB on hybrid servers for Prod Environment
  - name: Install MariaDB for Hyrbid Servers on Test Environment
    hosts: hybridstest
    tasks:
      - name: Install MariaDB
        apt:
          name: mariadb-server
          state: latest


    # Set up SSH keys on web and hybrid servers for Prod Environment by copying the public key to the authorized_keys file and copying the private key to the .ssh directory
  - name: Set up SSH keys
    hosts: webserverstest hybridstest
    become: yes
    # the user to add the SSH key from
    vars:
      ssh_user: root
      # the public key to add to the authorized_keys file from ansible management server
      ssh_public_key: "{{ lookup('file', '/home/tdrobertso42/.ssh/id_rsa.pub') }}"
      # the private key to copy to the .ssh directory from ansible management server
      ssh_private_key: "{{ lookup('file', '/home/tdrobertso42/.ssh/id_rsa') }}"
      # tasks to run on the host targets to set up SSH keys
    tasks:
      # Ensure SSH directory exists
      - name: Ensure SSH directory exists
      # Ensure the .ssh directory exists using ansible builtin file module
        ansible.builtin.file:
          path: "/root/.ssh"
          state: directory
          mode: '0700'
      # Add SSH key to authorized keys
      - name: Add SSH key to authorized keys
      # add the public key to the authorized_keys file using ansible builtin authorized_key module
        ansible.builtin.authorized_key:
          user: "{{ ssh_user }}"
          state: present
          # add the public key to the authorized_keys file
          key: "{{ ssh_public_key }}"

      # copy the private key to the .ssh directory
      - name: Copy Private SSH key
        copy: 
          content: "{{ ssh_private_key }}"
          # the destination of the private key for root user
          dest: "/root/.ssh/id_rsa"
          owner: "{{ ssh_user }}"
          group: "{{ ssh_user }}"
          # set permissions of the private key
          mode: '0600'
          # only copy the private key if it exists
        when: ssh_private_key is defined

 # Upload SSH Setup Script
  - name: Upload SSH Setup Script
    hosts: webserverstest hybridstest
    tasks:
    - name: Copy SSH Setup Script
      copy:
      # Copy the SSH Setup Script from Management server to target servers
        src: /home/tdrobertso42/ansible_playbooks/addSSH.sh
        dest: /tmp/addSSH.sh
        # Set permissions of the SSH Setup Script
        mode: '0755'
      become: yes

  # Execute SSH Setup Script
  - name: Execute SSH Setup Script
    hosts: webserverstest hybridstest
    become: yes
    tasks:
      - name:
      # Run the SSH Setup Script
        command: /tmp/addSSH.sh
        become: yes
         
   # Add github to known hosts
  - name: Add github to known hosts
    hosts: webserverstest hybridstest
    become: yes
    tasks:
      - name: Add github to known hosts
      # Add github to known hosts using ansible builtin known_hosts module
        ansible.builtin.known_hosts:
          name: github.com
          # Use pipe lookup plugin to run ssh-keyscan command to get the public key of github.com
          key: "{{ lookup('pipe', 'ssh-keyscan -t rsa github.com') }}"
          state: present

          
  # Clone the repository to target servers for Prod Environment
  - name: Clone Repository
    hosts: webserverstest hybridstest
    vars:
      # The URL of the Git repository to clone from
      repo_url: "git@github.com:ttu-bburchfield/swollenhippofinal.git"
      branch_name: "{{ branch }}" # Change for each environment.
      dest: "/root/var/www/html"
    tasks:
      # Check if directory exists
      - name: Check if the directory exists
        ansible.builtin.stat:
          path: "{{ dest }}"
        register: repo_exists

      # Create the directory if it doesn't exist
      - name: Create the directory if it doesn't exist
        ansible.builtin.file:
          path: "{{ dest }}"
          state: directory
        when: not repo_exists.stat.exists

      # Check if the directory is empty if it exists
      - name: Check if the directory is empty if it exists
        ansible.builtin.command: find "{{ dest }}" -mindepth 1 -print -quit
        register: is_directory_empty
        changed_when: False
        failed_when: False
        check_mode: no
        when: repo_exists.stat.exists

      # Clone Repository if it doesn't already exist or is empty
      - name: Clone Repository
        ansible.builtin.git:
          repo: "{{ repo_url }}"
          dest: "{{ dest }}"
          version: "{{ branch_name }}"
        when: not repo_exists.stat.exists or is_directory_empty.stdout == ""

      # Update Repository if it already exists and is not empty
      - name: Update Repository
        ansible.builtin.git:
          repo: "{{ repo_url }}"
          dest: "{{ dest }}"
          version: "{{ branch_name }}"
          update: yes
        when: repo_exists.stat.exists and is_directory_empty.stdout != ""


